syntax = "proto3";

package books;

import "github.com/kitt-technology/protoc-gen-graphql/graphql/graphql.proto";
import "github.com/kitt-technology/protoc-gen-graphql/example/common/common.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

option go_package = "example/books;books";

service Books {
  option (graphql.host) =
  "localhost:50051";

  rpc getBooks(GetBooksRequest) returns (GetBooksResponse) {}
  rpc getBooksByAuthor(graphql.BatchRequest) returns (GetBooksByAuthorResponse) {}
}

message DoNothing {}

message GetBooksRequest {
  option (graphql.object_name) = "BooksRequest";
  repeated string ids = 1 [(graphql.optional) = true];
  google.protobuf.BoolValue hardback_only = 2;
  repeated Genre genres = 3;
  google.protobuf.Timestamp released_after = 4;
  string ignore_me = 5 [(graphql.skip_field) = true];
}

message GetBooksResponse {
  repeated Book books = 1;
}

message GetBooksByAuthorResponse {
  map<string, BooksByAuthor> results = 1;
}

message BooksByAuthor {
  repeated Book results = 2;

}
message Book {
  string id = 1;
  string name = 2;
  string author_id = 3;
  Genre genre = 4;
  google.protobuf.Timestamp release_date = 5;
  float price = 6;
  int64 copies = 7;
  common.Money price_two = 8;
}

enum Genre {
  Fiction = 0;
  Biography = 1;
}

message SkipMe {
  option (graphql.skip_message) = true;
  string oh_no = 1;
}
