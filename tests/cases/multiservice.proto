syntax = "proto3";

package multiservice;

import "graphql.proto";

option go_package = "github.com/kitt-technology/protoc-gen-graphql/cases;cases";

service ServiceA {
  option (graphql.host) = "localhost:50051";

  rpc getItemsA(GetItemsARequest) returns (GetItemsAResponse) {}

  // Batch loader for ServiceA
  rpc loadItemsA(graphql.BatchRequest) returns (LoadItemsAResponse) {
    option (graphql.batch_loader) = true;
  }
}

service ServiceB {
  option (graphql.host) = "localhost:50052";

  rpc getItemsB(GetItemsBRequest) returns (GetItemsBResponse) {}

  // Batch loader for ServiceB
  rpc loadItemsB(graphql.BatchRequest) returns (LoadItemsBResponse) {
    option (graphql.batch_loader) = true;
  }
}

message GetItemsARequest {
  repeated string ids = 1;
}

message GetItemsAResponse {
  repeated ItemA items = 1;
}

message LoadItemsAResponse {
  map<string, ItemA> results = 1;
}

message ItemA {
  string id = 1;
  string name = 2;
}

message GetItemsBRequest {
  repeated string ids = 1;
}

message GetItemsBResponse {
  repeated ItemB items = 1;
}

message LoadItemsBResponse {
  map<string, ItemB> results = 1;
}

message ItemB {
  string id = 1;
  string value = 2;
}