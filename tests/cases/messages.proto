syntax = "proto3";

package books;

import "github.com/kitt-technology/protoc-gen-graphql/graphql/graphql.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

option go_package = "cases;cases";

service Books {
  option (graphql.host) =
      "localhost:50051";

  rpc getBooks(GetBooksRequest) returns (GetBooksResponse) {}

  rpc getBooksByAuthor(graphql.BatchRequest) returns (GetBooksByAuthorResponse) {}
}

message GetBooksRequest {
  option (graphql.object_name) = "BooksRequest";
  repeated string ids = 1;
  google.protobuf.BoolValue hardback_only = 2;
  google.protobuf.FloatValue price = 3;
  repeated Genre genres = 4;
  google.protobuf.Timestamp released_after = 5;
  PaginationOptions pagination = 6;
  repeated Filter filters = 7;
}

message PaginationOptions {
  int32 page = 1;
  int32 per_page = 2;
}

message Filter {
  string query = 1;
}

message GetBooksResponse {
  repeated Book books = 1;
}

message GetBooksByAuthorResponse {
  map<string, BooksByAuthor> results = 1;
}

message BooksByAuthor {
  repeated Book results = 2;

}
message Book {
  string id = 1;
  string name = 2;
  string author_id = 3;
  Genre genre = 4;
  google.protobuf.Timestamp release_date = 5;
}

enum Genre {
  Fiction = 0;
  Biography = 1;
}
