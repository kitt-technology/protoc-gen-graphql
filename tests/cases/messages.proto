syntax = "proto3";

package cases;

import "graphql/graphql.proto";
import "google/protobuf/wrappers.proto";

option go_package = "cases;cases";

service MyService {
  rpc getSomething(GetSomethingRequest) returns (GetSomethingResponse) {}
}

message GetSomethingRequest {
  string id = 1;
}
message GetSomethingResponse {
  string id = 1;
}

message TestCommand {
  option (graphql.mutation_options) = {
    name: "openDoor",
    success: "CommandSuccess",
    failure: "CommandFailed",
  };

  string id = 1;
  int32 some_int = 2;
  bool some_bool = 3;
  map<string, SomeObject> id_object_map = 4;
  repeated SomeObject id_object_list = 5;
  repeated string string_list = 6;
  map<string, string> string_map = 7;
  google.protobuf.StringValue optional_id = 8;
}

message SomeObject {
  string some_id = 1;
}

message CommandSuccess {}

message CommandFailed {}


